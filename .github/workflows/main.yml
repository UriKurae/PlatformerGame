# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  tagged_release:

    name: "Tagged Release"
    runs-on: "windows-latest"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Build
        uses: actions/checkout@v2

      - name: Generate Artifact
        env:
          RELEASE_NAME: The Hunter Odyssey Alpha
        run: |
          msbuild.exe Development.sln /p:Configuration=Release /p:Platform=x86
          copy /Y .\README.md .\build\${{ env.RELEASE_NAME }}\README.md
          copy /Y .\LICENSE .\build\${{ env.RELEASE_NAME }}\LICENSE
          cd build
          7z a ./${{ env.RELEASE_NAME }}.zip ./${{env.RELEASE_NAME }}
          dir
        shell: cmd

      - name: Upload Artifact
        id: upload-artifact 
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.RELEASE_NAME }}.zip
          path: ./build/$${{ env.RELEASE_NAME }}

      - name: Create Release
        id: create_release
        #uses: "marvinpinto/action-automatic-releases@latest"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: ${{ env.RELEASE_NAME }}
          body: Info of the release
          draft: false
          prerelease: false
          #repo_token: "${{ secrets.GITHUB_TOKEN }}"
          #automatic_release_tag: latest
          #title: RELEASE TITLE
          #prerelease: false
          files: |
            LICENSE
            README.md
            Output
            Release/Game.exe

      - name: Upload Artifact to Release
        id: upload_artifact_to_release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Output/
          asset_name: ${{ env.RELEASE_NAME }}.zip
          asset_content_type: application/zip
